name: Feature and Bugfix Branch Workflow

on:
  push:
    branches:
      - 'feature/*'
      - 'bugfix/*'

permissions:
  pull-requests: write
  checks: write
  contents: read
  issues: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
          clean: true

      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "New ${steps.branch-names.outputs.current_branch}: ${{ github.event.head_ref }}"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          author: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          branch: "${{ steps.branch-names.outputs.current_branch }}"
          base: "development"
          title: "${{ steps.branch-names.outputs.current_branch }}: ${{ github.event.head_ref }}"
          body: "This pull request is automatically generated for the ${{ steps.branch-names.outputs.current_branch }} branch."
          labels: "${{ steps.branch-names.outputs.current_branch }}"
          draft: false

  code-review:
    runs-on: ubuntu-latest
    needs: create-pr
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Code Review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            type Context = {
              repo: {
                owner: string;
                repo: string;
              };
              issue: {
                number: number;
              };
              payload: {
                pull_request: {
                  number: number;
                };
              };
            };

            async function run() {
              const context: Context = github.context;

              const { owner, repo } = context.repo;
              const pull_number = context.payload.pull_request.number;

              await github.rest.pulls.createReview({
                owner,
                repo,
                pull_number,
                event: 'APPROVE',
                body: 'Automated approval after code review checks.'
              });
            }

            run();
          
  merge-pr:
    runs-on: ubuntu-latest
    needs: code-review
    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
          clean: true

      - name: Merge pull request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            type Context = {
              repo: {
                owner: string;
                repo: string;
              };
              issue: {
                number: number;
              };
              payload: {
                pull_request: {
                  number: number;
                };
              };
            };

            async function run() {
              const context: Context = github.context;

              const { owner, repo } = context.repo;
              const pull_number = context.payload.pull_request.number;

              const { data: pullRequest } = await github.rest.pulls.get({
                owner,
                repo,
                pull_number
              });

              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number,
                commit_title: pullRequest.title,
                merge_method: 'squash'
              });
            }

            run();

  delete-branch:
    runs-on: ubuntu-latest
    needs: merge-pr
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
          clean: true

      - name: Delete feature or bugfix branch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            type Context = {
              repo: {
                owner: string;
                repo: string;
              };
              ref: string;
            };

            async function run() {
              const context: Context = github.context;
              const { owner, repo } = context.repo;
              const branch = context.ref;

              await github.rest.git.deleteRef({
                owner,
                repo,
                ref: branch
              });
            }

            run();
